{"version":3,"sources":["firebaseConfig.ts","pages/Home.tsx","pages/About.tsx","pages/Dashboard.tsx","components/CanvasImage.tsx","components/CanvasText.tsx","components/Image.tsx","components/Transition.tsx","util/truncate.ts","constants.ts","assets/card_logo.png","components/SharePopup.tsx","components/Editor.tsx","pages/Edit.tsx","assets/card_logo.zpt","components/Text.tsx","components/ARCanvas.tsx","pages/View.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","providers","firebase","initializeApp","firebaseConfig","auth","googleProvider","GoogleAuthProvider","useStyles","makeStyles","theme","createStyles","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","fontFamily","textAlign","TransitionsModal","classes","useState","open","setOpen","history","useHistory","Button","variant","color","onClick","Modal","aria-labelledby","aria-describedby","className","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","signInWithPopup","then","result","push","catch","error","console","log","style","width","src","App","root","maxWidth","ProjectCard","title","timestamp","id","Card","CardContent","Typography","gutterBottom","component","toDateString","CardActions","href","CardList","user","currentUser","db","firestore","cards","setCards","useEffect","collection","where","uid","get","querySnapshot","cards_tmp","forEach","doc","card_tmp","data","getData","map","item","displayName","createdAt","toDate","AppBar","position","Toolbar","bottom","right","Fab","aria-label","Add","left","signOut","to","Image","imageProps","useThree","camera","gl","scene","meshRef","useRef","transformControl","setTControl","orbit","updatePosition","updateRotation","idx","mode","meshProps","scaleX","setScaleX","scaleY","setScaleY","texture","useMemo","THREE","load","minimum","Math","min","image","height","current","transformC","TransformControls","domElement","attach","add","callback","event","enabled","value","curMode","x","y","z","setMode","addEventListener","removeEventListener","remove","ref","args","Text","textProps","font","parse","Font","text","textOptions","size","Transition","React","forwardRef","props","Slide","direction","copyString","str","slice","truncate","og","length","constants","MAX_OBJECTS","HOSTNAME","Share","Constants","fgColor","logo","radToDeg","PI","extend","OrbitControls","drawerWidth","appBar","marginRight","drawer","flexShrink","drawerPaper","toolbar","mixins","content","flexGrow","default","Scene","objects","type","onDown","e","key","window","Sky","distance","sunPosition","inclination","azimuth","fallback","object","i","obj","rotation","Editor","passedCard","saveCard","card","setCard","openCancel","setOpenCancel","handleCloseCancel","openAdd","setOpenAdd","handleCloseAdd","openEdit","setOpenEdit","handleClickOpenEdit","setRenameValue","selectedIndex","handleCloseEdit","openSave","setOpenSave","handleCloseSave","openView","setOpenView","handleCloseView","renameValue","setSelectedIndex","setType","setValue","setCodeReady","handlePosRotChange","element","target","newCard","Object","assign","charAt","savePressed","a","snackbar","setSnackbar","snackbarText","setSnackbarText","openSnackbar","document","body","margin","CssBaseline","noWrap","innerHeight","zIndex","onCreated","state","setClearColor","toFixed","Drawer","anchor","IconButton","alignSelf","fontSize","Divider","List","index","ListItem","button","selected","handleElementClick","ListItemIcon","ListItemText","disableTypography","primary","textOverflow","ListItemSecondaryAction","edge","Edit","marginTop","flexDirection","TextField","label","fullWidth","onChange","Dialog","TransitionComponent","keepMounted","DialogTitle","DialogContent","DialogContentText","DialogActions","setTimeout","FormControl","FormLabel","RadioGroup","name","FormControlLabel","control","Radio","autoFocus","random","addObject","oldIndex","splice","renameObject","Snackbar","anchorOrigin","vertical","horizontal","message","useParams","setUser","undefined","owner","set","merge","fetchData","trace","FieldPath","documentId","count","alert","onAuthStateChanged","JSON","stringify","CircularProgress","ARCanvas","rearCameraMirrorMode","onNotVisible","onNewAnchor","onVisible","targetImage","targetFile","intensity","View","path","exact","Home","About","Dashboard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b86e8b92.chunk.js","sourcesContent":["const config = {\n    apiKey: \"AIzaSyCLNVdnIjjINeFGl-Ckw88Y7iXT78OTqNo\",\n    authDomain: \"a-card-from-me.firebaseapp.com\",\n    projectId: \"a-card-from-me\",\n    storageBucket: \"a-card-from-me.appspot.com\",\n    messagingSenderId: \"255067960937\",\n    appId: \"1:255067960937:web:499d5c9625fd58ca3794f8\",\n    measurementId: \"G-VZE1B3269R\"\n};\n\nexport default config;","import React, { Suspense, useState } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { Button, Fade, Backdrop, Modal, Fab } from '@material-ui/core';\nimport { useHistory } from \"react-router-dom\";\n\n\n// import withFirebaseAuth from 'react-with-firebase-auth'\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport firebaseConfig from '../firebaseConfig';\n\nimport \"../index.css\";\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\nconst firebaseAppAuth = firebaseApp.auth();\nconst providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider(),\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n      fontFamily: \"Nunito\",\n      textAlign: \"center\"\n    },\n  }),\n);\n\nfunction TransitionsModal() {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const history = useHistory();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const loginWithGoogle = () => {\n    firebase.auth()\n      .signInWithPopup(providers.googleProvider)\n      .then((result) => {\n        // redirect to dashboard\n        history.push(\"/dashboard\");\n      }).catch((error) => {\n        console.log(error)\n      });\n  };\n\n  return (\n    <div>\n      <Button variant=\"contained\" color=\"secondary\" onClick={handleOpen}>\n        Get Started\n      </Button>\n\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <h1>Welcome!</h1>\n            To create a card, you must have an account. \n\n            <br/>\n            <br/>\n\n            <Button variant=\"contained\" color=\"default\" onClick={loginWithGoogle}>\n              Sign in with Google\n              <div style={{width: 15}}></div>\n              <img src=\"https://google.com/favicon.ico\"></img>\n            </Button>\n\n            <br/>\n            <br/>\n\n            Click outside to dismiss.\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <div style={{textAlign: \"center\"}}>\n      <h1>A Card From Me</h1>\n      <TransitionsModal />\n    </div>\n  );\n}\n\nexport default App;","import React, { Suspense } from 'react';\n\nfunction App() {\n    return (\n      <h1>About</h1>\n    );\n}\n\nexport default App;","import React, { Suspense, useEffect, useState } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nimport { AppBar, Button, Toolbar, Typography, Card, CardActions, CardContent, makeStyles, Fab, ListItemAvatar } from '@material-ui/core';\nimport { Add as AddIcon } from \"@material-ui/icons\";\nimport { useHistory, Link } from 'react-router-dom';\nimport CardSchema from '../schema/card';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345\n  }\n});\n\nconst ProjectCard:React.FC<{title: string, timestamp: Date, id: string}> = ({title, timestamp, id}) => {\n  const classes = useStyles();\n  return (\n    <div style={{padding: 10}}>\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Created on {timestamp.toDateString()}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button variant=\"contained\" color=\"default\" href={`/edit/${id}`}>\n            Open\n          </Button>\n          <Button variant=\"contained\" color=\"primary\">\n            Share\n          </Button>\n          <Button variant=\"contained\" color=\"secondary\">\n            Delete\n          </Button>\n        </CardActions>\n      </Card>\n    </div>\n  )\n}\n\nfunction CardList() {\n  const user = (firebase.auth().currentUser);\n  const db = firebase.firestore();\n\n  const [cards, setCards] = useState<CardSchema[]>([]);\n\n  function getData() {\n    if(user) {\n      return db.collection(\"cards\")\n        .where(\"owner\", \"==\", user.uid)\n        .get()\n        .then((querySnapshot) => {\n          let cards_tmp: CardSchema[] = [];\n          querySnapshot.forEach((doc) => {\n              const card_tmp = doc.data() as CardSchema;\n              card_tmp.id = doc.id;\n              cards_tmp.push(card_tmp);\n              console.log(\"d\");\n              // setCards(arr => [...arr, doc.data() as CardSchema]);\n          });\n          \n          return cards_tmp\n      });\n    } else {\n      // signOut();\n    }\n  }\n\n  useEffect(() => {\n    let mounted = true;\n    getData()!\n      .then(data => {\n        if(mounted && data) {\n          setCards(data)\n          console.log(\"recieved\")\n          console.log(data)\n        }\n      })\n  }, [])\n\n\n  return (\n    <div>\n      {cards.map(item => \n        <ProjectCard title={item.displayName} timestamp={item.createdAt!.toDate()} id={item.id}></ProjectCard>\n      )}\n    </div>\n  )\n}\n\nfunction App() {\n  const user = (firebase.auth().currentUser);\n\n  const history = useHistory();\n  \n  function signOut() {\n    firebase.auth().signOut();\n    history.push(\"/\");\n    return;\n  }\n\n  if(user) {\n    return (\n        <div>\n          <AppBar position=\"static\" color=\"primary\">\n            <Toolbar>\n              <Typography variant=\"h6\" >\n                Dashboard\n              </Typography>\n            </Toolbar>\n          </AppBar>\n\n          <div style={{padding: 10}}>\n\n            {/* <h2>Signed in as: {user?.displayName}</h2> */}\n            \n            <h2>{user?.displayName}'s Projects:</h2>\n\n            <hr/>\n            \n            {/* {renderCards()} */}\n            <CardList />\n            {/* <ProjectCard title=\"Project 1\" timestamp={new Date()}></ProjectCard>\n            <ProjectCard title=\"Project 1\" timestamp={new Date()}></ProjectCard> */}\n\n            <div style={{width: '100%', position: 'fixed', bottom: 90}}>\n              {/* <div style={{position: 'fixed', left: 30}}>\n                <Button variant=\"contained\" color=\"secondary\" onClick={signOut}>\n                  Sign Out\n                </Button>\n              </div> */}\n\n              <div style={{position: 'fixed', right: 50}}>\n                <Fab color=\"primary\" aria-label=\"add\">\n                  <AddIcon />\n                </Fab>\n              </div>\n\n            </div>\n\n\n            <div style={{position: \"relative\", bottom: -20, left: 20, width: \"98%\"}}>\n              <hr></hr>\n              <br/>\n              <Button variant=\"contained\" color=\"secondary\" onClick={signOut}>\n                Sign Out\n              </Button>\n            </div>\n          </div>\n        </div>\n      );\n  } else {\n    return (\n      <div style={{textAlign: \"center\"}}>\n        <h1>You must be logged in to view your dashboard</h1>\n        <Link to=\"/\">Home</Link>\n      </div>\n    )\n  }\n}\n\nexport default App;","import React, { Suspense, useEffect, useMemo, useRef, useState } from 'react';\nimport { MeshProps, useLoader, useThree, } from 'react-three-fiber'\nimport { TransformControls } from 'three/examples/jsm/controls/TransformControls';\n\nimport type { Mesh } from \"three\"\n\nimport * as THREE from 'three';\n\ninterface ImageProps extends MeshProps {\n  src: string;\n  orbit: any;\n  updatePosition: (key: number, x: number, y: number, z: number) => void;\n  updateRotation: (key: number, x: number, y: number, z: number) => void;\n  idx: number,\n  mode: string,\n}\n\nconst Image: React.FC<ImageProps> = (imageProps) => {\n  \n  const { camera, gl, scene } = useThree();\n  const meshRef = useRef<THREE.Mesh>();\n  const [transformControl, setTControl] = useState<TransformControls | undefined>();\n  \n  const { src, orbit, updatePosition, updateRotation, idx, mode, ...meshProps} = imageProps;\n  \n  const [scaleX, setScaleX] = useState(1)\n  const [scaleY, setScaleY] = useState(1)\n\n  const texture:THREE.Texture = useMemo(() => \n    new THREE.TextureLoader().load(src, (texture: THREE.Texture) => {\n        const minimum = Math.min(texture.image.width, texture.image.height);\n        setScaleX(texture.image.width/minimum);\n        setScaleY( texture.image.height/minimum);\n    }), \n  []);\n\n  useEffect(() => {      \n      if (!transformControl && meshRef.current) {\n          let transformC = new TransformControls(camera, gl.domElement);\n          transformC.attach(meshRef.current);\n\n          // updateReferences(idx, scene, transformC);\n\n          scene.add(transformC);\n          setTControl(transformC);\n      }\n\n      const callback = (event: any) => {\n        orbit.current.enabled = !event.value\n        if(meshRef.current) {\n          const curMode = mode == \"translate\";\n          const {x, y, z} = meshRef.current[curMode ? \"position\" : \"rotation\"];\n\n          if(curMode)\n            updatePosition(idx, x, y, z);\n          else\n            updateRotation(idx, x, y, z);\n        }\n      }\n      \n      transformControl?.setMode(mode);\n      \n      transformControl?.addEventListener(\"dragging-changed\", callback)\n\n      return () =>  {\n        transformControl?.removeEventListener(\"dragging-changed\", callback)\n        if(!meshRef.current && transformControl)\n          scene.remove(transformControl)\n      }\n      // return () => {\n      //     if (transformControl) {\n      //         scene.remove(transformControl);\n      //         setTControl(undefined);\n      //     }\n      // };\n  }/*, [transformControl, camera, scene, gl]*/);\n  \n\n  return (\n    <mesh\n      {...meshProps}\n      ref={meshRef}>\n      <boxBufferGeometry args={[scaleX, scaleY, 0.01]} />\n      <meshBasicMaterial map={texture} attach=\"material\" />  \n    </mesh>\n  )\n}\n\nexport default Image;","import React, { Suspense, useEffect, useRef, useState } from 'react';\nimport { MeshProps, useLoader, useThree, } from 'react-three-fiber'\nimport { TransformControls } from 'three/examples/jsm/controls/TransformControls';\n\nimport type { Mesh } from \"three\"\n\nimport * as THREE from 'three';\nimport Font from \"../assets/font.json\";\n\ninterface TextProps extends MeshProps {\n  text: string; \n  color?: string;\n  orbit: any;\n  updatePosition: (key: number, x: number, y: number, z: number) => void;\n  updateRotation: (key: number, x: number, y: number, z: number) => void;\n  idx: number,\n  mode: string,\n}\n\nconst Text: React.FC<TextProps> = (textProps) => {\n  const font = new THREE.FontLoader().parse(Font);\n  \n  const { camera, gl, scene } = useThree();\n  const meshRef = useRef<THREE.Mesh>();\n  const [transformControl, setTControl] = useState<TransformControls | undefined>();\n  \n  const { text, color, orbit, updatePosition, updateRotation, idx, mode, ...meshProps} = textProps;\n  \n  let deleted = false;\n\n  useEffect(() => {      \n      if (!transformControl && meshRef.current) {\n          let transformC = new TransformControls(camera, gl.domElement);\n          transformC.attach(meshRef.current);\n\n          // updateReferences(idx, scene, transformC);\n\n          scene.add(transformC);\n          setTControl(transformC);\n      }\n\n      const callback = (event: any) => {\n        orbit.current.enabled = !event.value\n        if(meshRef.current) {\n          const curMode = mode == \"translate\";\n          const {x, y, z} = meshRef.current[curMode ? \"position\" : \"rotation\"];\n\n          if(curMode)\n            updatePosition(idx, x, y, z);\n          else\n            updateRotation(idx, x, y, z);\n        }\n      }\n      \n      transformControl?.setMode(mode);\n      \n      transformControl?.addEventListener(\"dragging-changed\", callback)\n\n      return () =>  {\n        transformControl?.removeEventListener(\"dragging-changed\", callback)\n        if(!meshRef.current && transformControl)\n          scene.remove(transformControl)\n      }\n      // return () => {\n      //     if (transformControl) {\n      //         scene.remove(transformControl);\n      //         setTControl(undefined);\n      //     }\n      // };\n  }/*, [transformControl, camera, scene, gl]*/);\n  \n\n  const textOptions = {\n    font,\n    size: 0.5,\n    height: 0.01,\n  };\n\n  return (\n    <mesh\n      {...meshProps}\n      ref={meshRef}\n      >\n      <textGeometry attach='geometry' args={[text, textOptions]} />\n      <meshStandardMaterial color={color ?? \"black\"} />\n    </mesh>\n  )\n}\n\nexport default Text;","import * as THREE from 'three';\nimport {MeshProps, useLoader } from 'react-three-fiber'\nimport { useMemo, useState } from 'react';\n\ninterface ImageProps extends MeshProps {\n  src: string;\n}\n\nconst Image: React.FC<ImageProps> = (imageProps) => {\n\n    const {src, ...meshProps} = imageProps;\n    \n    const [scaleX, setScaleX] = useState(1)\n    const [scaleY, setScaleY] = useState(1)\n\n    const texture:THREE.Texture = useMemo(() => \n      new THREE.TextureLoader().load(src, (texture: THREE.Texture) => {\n          const minimum = Math.min(texture.image.width, texture.image.height);\n          setScaleX(texture.image.width/minimum);\n          setScaleY( texture.image.height/minimum);\n      }), \n    []);\n    \n    return (\n      <mesh\n        {...meshProps}>\n        <boxBufferGeometry args={[scaleX, scaleY, 0.01]} />\n        <meshBasicMaterial map={texture} attach=\"material\" />  \n      </mesh>\n    )\n}\n\nexport default Image;","import { TransitionProps } from \"@material-ui/core/transitions/transition\";\nimport Slide from '@material-ui/core/Slide';\nimport React from \"react\";\n\nconst Transition = React.forwardRef(function Transition(\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\n    ref: React.Ref<unknown>,\n  ) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default Transition","const truncate = (og: string, length: number) => {\n    const str = copyString(og);\n    return str.length < length ? str : str.slice(0, length) + \"...\"\n}\n\nconst copyString = (str: string) => {\n    return (' ' + str).slice(1);\n}\n\n\nexport default truncate;","const constants = {\n    MAX_OBJECTS: 15,\n    HOSTNAME: \"192.168.1.22:4000\"\n}\n\nexport default constants;","export default __webpack_public_path__ + \"static/media/card_logo.2612bc05.png\";","import React, { MutableRefObject } from \"react\"\n\nimport QRCode from \"react-qr-code\";\nimport logo from \"../assets/card_logo.png\"\nimport Constants from \"../constants\";\n\nconst Share: React.FC<{id: string}> = ({id}) => {\n    return (\n        <div style={{textAlign: \"center\"}}>\n            <QRCode value={\"https://\" + Constants.HOSTNAME + \"/view/\" + id} size={230} fgColor=\"#0373fc\" />\n            <br></br>\n            <img src={logo} style={{width: 200}} />\n        </div>    \n    )\n}\n\nexport default Share;","import React, { Suspense, useEffect, useRef, useState } from 'react'\nimport { Canvas, useThree, extend } from 'react-three-fiber'\nimport * as THREE from 'three';\nimport { Sky, TransformControls } from \"@react-three/drei\";\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\n\n\nimport Image from \"./CanvasImage\";\nimport Text from \"./CanvasText\";\nimport FlatImage from \"./Image\";\n\nimport logo from \"../assets/card_logo.png\"\n\nimport ARObject from '../schema/arobject';\nimport { AppBar, Button, createStyles, CssBaseline, Divider, Drawer, IconButton, List, ListItem, ListItemIcon, ListItemText, makeStyles, Modal, Theme, Toolbar, Typography, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, FormControl, FormControlLabel, FormLabel, Radio, RadioGroup, ListItemSecondaryAction, Snackbar } from '@material-ui/core';\n\nimport { Inbox as InboxIcon, Mail as MailIcon, CancelOutlined as CancelIcon, Image as ImageIcon, TextFields as TextIcon, Edit as EditIcon } from \"@material-ui/icons\"\nimport { useHistory } from 'react-router-dom';\nimport CardSchema from '../schema/card';\n\nimport Transition from \"./Transition\"\nimport truncate from \"../util/truncate\";\nimport getRandomInt from '../util/random';\nimport sleep from \"../util/sleep\";\n\nimport Constants from \"../constants\";\nimport { delay } from 'lodash';\nimport Share from './SharePopup';\n\nconst radToDeg = 180/Math.PI;\n\nextend({ OrbitControls })\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginRight: drawerWidth,\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background.default\n    },\n  }),\n);\n\nconst Scene: React.FC<{objects: ARObject[], updatePosition: (key: number, x: number, y: number, z: number) => void; updateRotation: (key: number, x: number, y: number, z: number) => void;}> = ({objects, updatePosition, updateRotation}) => {\n    const {\n        camera,\n        gl: { domElement }\n    } = useThree()\n\n    console.log(objects[0].type)\n\n    const orbit = useRef()\n\n    const [mode, setMode] = useState(\"translate\");\n\n    const onDown = (e: KeyboardEvent) => {\n      if(e.key == \"r\") {\n        setMode(\"rotate\")\n      } else if(e.key == \"t\") {\n        setMode(\"translate\")\n      }\n    }\n\n    useEffect(() => {\n      window.addEventListener('keydown', onDown); \n\n      return () => {\n        window.removeEventListener('keydown', onDown);\n      };\n    });\n\n    return (\n        <>\n        <Sky  distance={450000} // Camera distance (default=450000)\n            sunPosition={[0, 1, 1]} // Sun position normal (defaults to inclination and azimuth if not set)\n            inclination={0} // Sun elevation angle from 0 to 1 (default=0)\n            azimuth={0.75} // Sun rotation around the Y axis from 0 to 1 (default=0.25)\n        />\n        <ambientLight />\n        <orbitControls args={[camera, domElement]} ref={orbit} />\n        <gridHelper args={[10, 10]} />\n        <axesHelper args={[4]} />\n        <pointLight position={[10, 10, 10]} />\n\n        <Suspense fallback={null}>\n            {objects.map((object, i) => {\n              // <Text text=\"hi\" position={[0, 0, 0]} rotation={[0, 0, 0]} />\n              // const orbit = useRef()\n              // const transform = useRef()\n\n              {\n                let obj;\n                if(object.type == \"text\")\n                    obj = <Text text={object.value} color=\"black\" orbit={orbit} updatePosition={updatePosition} updateRotation={updateRotation} key={i} idx={i} mode={mode} rotation={[object.rotation.x * Math.PI/180, object.rotation.z * Math.PI/180, object.rotation.y * Math.PI/180]} position={[object.position.x, object.position.z, object.position.y]}></Text>\n                else\n                    obj = <Image orbit={orbit} updatePosition={updatePosition} updateRotation={updateRotation} key={i} idx={i} mode={mode} rotation={[object.rotation.x * Math.PI/180, object.rotation.z * Math.PI/180, object.rotation.y * Math.PI/180]} src={object.value} position={[object.position.x, object.position.z, object.position.y]}></Image>\n                \n                return (\n                  <>\n                    {obj}\n                    <FlatImage key={i} rotation={[Math.PI/2, 0, 0]} src={\"https://i.kym-cdn.com/photos/images/facebook/000/352/246/937.png\"} position={[0, 0, 0]}></FlatImage>\n                  </>\n                )\n              }\n            })}\n\n            {/* <Text text=\"Hello\" color=\"red\" ></Text>\n            <Image rotation={[Math.PI/2, 0, 0]} src=\"https://media-exp1.licdn.com/dms/image/C4D0BAQFsG8fmxly5lQ/company-logo_200_200/0/1573213004817?e=2159024400&v=beta&t=bqn4yrcLQvuDkG9pYT9MaWIfbkRet1FyNLFMLpYZE-E\"></Image> */}\n        \n        </Suspense>\n        </>\n    )\n}\n\nconst Editor: React.FC<{passedCard: CardSchema, saveCard: (card: CardSchema) => void}> = ({passedCard, saveCard}) => {\n    const classes = useStyles();\n    const history = useHistory();\n    // const [height, setHeight] = useState(773);\n\n    const [card, setCard] = useState<CardSchema>(passedCard)\n    const [openCancel, setOpenCancel] = React.useState(false);\n    // const [selectedObject, setSelectedObject] = useState(card.objects[0])\n\n    const handleClickOpenCancel = () => {\n        setOpenCancel(true);\n    };\n\n    const handleCloseCancel = () => {\n        setOpenCancel(false);\n    };\n\n    const [openAdd, setOpenAdd] = React.useState(false);\n\n    const handleClickOpenAdd = () => {\n        setOpenAdd(true);\n    };\n\n    const handleCloseAdd = () => {\n        setOpenAdd(false);\n    };\n\n    const [openEdit, setOpenEdit] = React.useState(false);\n    const handleClickOpenEdit = () => {\n        setRenameValue(card.objects[selectedIndex].value)\n        setOpenEdit(true);\n    };\n\n    const handleCloseEdit = () => {\n        setOpenEdit(false);\n    };\n\n    const [openSave, setOpenSave] = React.useState(false);\n    const handleClickOpenSave = () => {\n        setOpenSave(true);\n    };\n\n    const handleCloseSave = () => {\n        setOpenSave(false);\n    };\n\n    const [openView, setOpenView] = React.useState(false);\n    const handleClickOpenView = () => {\n        setOpenView(true);\n    };\n\n    const handleCloseView = () => {\n        setOpenView(false);\n    };\n\n    const [renameValue, setRenameValue] = React.useState('');\n\n    const handleRename = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setRenameValue((event.target as HTMLInputElement).value);\n    };\n\n    const renameObject = () => {\n      let newCard = Object.assign({}, card);\n\n      newCard.objects[selectedIndex].value = renameValue;\n      setCard(newCard);\n    };\n    \n    const updateReferences = (key: number, scene: THREE.Scene, controls: THREE.Object3D) => {\n      let newCard = Object.assign({}, card);\n\n      newCard.objects[selectedIndex].references = {scene: scene, controls: controls}\n      setCard(newCard);\n    }\n\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n    const [type, setType] = React.useState('text');\n\n    const handleTypeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setType((event.target as HTMLInputElement).value);\n    };\n\n    const [value, setValue] = React.useState('');\n\n    const [codeReady, setCodeReady] = React.useState(false);\n\n    const handleValueChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n\n    const handlePosRotChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      const element = event.target as HTMLInputElement;\n\n      let newCard = Object.assign({}, card);\n\n      newCard.objects[selectedIndex][element.id.charAt(0) == \"p\" ? \"position\" : \"rotation\"][element.id.slice(-1) as \"x\" | \"y\" | \"z\"] = +element.value\n\n      setCard(newCard);\n    };\n\n    const savePressed = async() => {\n      handleCloseSave();\n      handleClickOpenView();\n      saveCard(card);\n      setCodeReady(true);\n    }\n\n    const updatePosition = (key: number, x: number, y: number, z: number) => {\n      let newCard = Object.assign({}, card);\n\n      newCard.objects[key].position = {x: +x.toFixed(3), y: +z.toFixed(3), z: +y.toFixed(3)}\n      setCard(newCard);\n    }\n\n    const updateRotation = (key: number, x: number, y: number, z: number) => {\n      let newCard = Object.assign({}, card);\n\n      newCard.objects[key].rotation = {x: +(x * radToDeg).toFixed(3), y: +(z * radToDeg).toFixed(3), z: +(y * radToDeg).toFixed(3)}\n      setCard(newCard);\n    }\n\n    const [snackbar, setSnackbar] = useState(false);\n    const [snackbarText, setSnackbarText] = useState(\"text\");\n\n    const openSnackbar = (text: string) => {\n      setSnackbarText(text)\n      setSnackbar(true)\n    }\n\n    useEffect(() => {\n        // setHeight(window.innerHeight);\n\n        // window.addEventListener(\"resize\", () => {\n        //     setHeight(window.innerHeight);\n        // })\n\n        document.body.style.height = \"100%\"\n        document.body.style.margin = \"0\"\n    }, []);\n\n    const handleElementClick = (\n        event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n        index: number,\n    ) => {\n        setSelectedIndex(index);\n    };\n\n    const addObject = () => {\n        if(card.objects.length >= Constants.MAX_OBJECTS)\n          return openSnackbar(`Sorry - scenes can have a maximum of ${Constants.MAX_OBJECTS} objects.`)\n\n        let newCard = Object.assign({}, card);\n        newCard.objects.push({\n            type: type,\n            value: value,\n            position: {\n                x: +(Math.random() * 2).toFixed(3),\n                y: +(Math.random() * 2).toFixed(3),\n                z: +(Math.random() * 2).toFixed(3)\n            },\n            rotation: {\n                x: 0,\n                y: 0,\n                z: 0\n            }\n        });\n\n        setCard(newCard);\n    }\n\n    // const shareRef = useRef();\n    // const handlePrint = useReactToPrint({\n    //   content: () => shareRef.current,\n    // });\n\n    return (\n        <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap>\n              {card.displayName}      \n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n\n\n        <div style={{height: window.innerHeight, zIndex: 5}}>\n            <Canvas onCreated={state => state.gl.setClearColor(\"#ebe8e8\")}>\n                <Scene objects={card.objects} updatePosition={updatePosition} updateRotation={updateRotation} />\n            </Canvas>\n        </div>\n\n\n      </main>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"right\"\n      >\n\n        <IconButton aria-label=\"exit\" style={{alignSelf: \"flex-end\"}} onClick={handleClickOpenCancel}>\n            <CancelIcon style={{fontSize: 30}} />\n        </IconButton>\n\n        <div className={classes.toolbar} />\n        \n        <Divider />\n        <List>\n          {card.objects.map((object, index) => (\n            <ListItem\n                button\n                selected={selectedIndex === index}\n                onClick={(event) => handleElementClick(event, index)}\n                key={index}\n            >\n                <ListItemIcon>\n                    { object.type == \"text\" ? \n                        <TextIcon></TextIcon> :\n                        <ImageIcon></ImageIcon>\n                    }\n                </ListItemIcon>\n                <ListItemText disableTypography primary={\n                  <Typography variant=\"body2\" style={{ textOverflow: \"ellipsis\" }}>{truncate(object.value, 15)}</Typography>\n                } />\n                {\n                  selectedIndex == index &&\n                  <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" aria-label=\"edit\" onClick={handleClickOpenEdit}>\n                      <EditIcon />\n                    </IconButton>\n                  </ListItemSecondaryAction>                  \n                }\n            </ListItem>\n          ))}\n        </List>\n        \n        <Button variant=\"contained\" color=\"default\" style={{margin: 15}} onClick={handleClickOpenAdd}>\n            Add an Object\n        </Button>\n\n        <br/>\n\n        <Divider />\n        \n        <Typography variant=\"subtitle1\" style={{textAlign: \"center\", margin: 15, textOverflow: \"ellipses\" }}>\n            Editing: <strong>{truncate(card.objects[selectedIndex].value, 15)}</strong>\n        </Typography>\n        \n        <Typography variant=\"caption\" style={{textAlign: \"center\", marginTop: 10}}>\n            Position\n        </Typography>\n\n        <div style={{margin: 15, marginTop: 0, display: 'flex', flexDirection: 'row', padding: 5}}>\n            <TextField\n                margin=\"dense\"\n                label=\"X\"\n                fullWidth\n                variant=\"filled\"\n                type=\"number\"\n                id=\"px\"\n                value={card.objects[selectedIndex].position.x}\n                onChange={handlePosRotChange}\n            />\n            <TextField\n                margin=\"dense\"\n                label=\"Y\"\n                fullWidth\n                variant=\"filled\"\n                type=\"number\"\n                id=\"py\"\n                value={card.objects[selectedIndex].position.y}\n                onChange={handlePosRotChange}\n            />\n            <TextField\n                margin=\"dense\"\n                label=\"Z\"\n                fullWidth\n                variant=\"filled\"\n                type=\"number\"\n                id=\"pz\"\n                value={card.objects[selectedIndex].position.z}\n                onChange={handlePosRotChange}\n            />\n\n        </div>\n\n        <Typography variant=\"caption\" noWrap style={{textAlign: \"center\", marginTop: 10}}>\n            Rotation\n        </Typography>\n\n        <div style={{margin: 15, marginTop: 0, display: 'flex', flexDirection: 'row', padding: 5}}>\n            <TextField\n                margin=\"dense\"\n                label=\"X\"\n                fullWidth\n                variant=\"filled\"\n                type=\"number\"\n                id=\"rx\"\n                value={card.objects[selectedIndex].rotation.x}\n                onChange={handlePosRotChange}\n            />\n            <TextField\n                margin=\"dense\"\n                label=\"Y\"\n                fullWidth\n                variant=\"filled\"\n                type=\"number\"\n                id=\"ry\"\n                value={card.objects[selectedIndex].rotation.y}\n                onChange={handlePosRotChange}\n            />\n            <TextField\n                margin=\"dense\"\n                label=\"Z\"\n                fullWidth\n                variant=\"filled\"\n                type=\"number\"\n                id=\"rz\"\n                value={card.objects[selectedIndex].rotation.z}\n                onChange={handlePosRotChange}\n            />\n\n        </div>\n\n        <Divider />\n\n        <Button variant=\"contained\" color=\"secondary\" style={{margin: 15}} onClick={handleClickOpenSave}>\n            Save\n        </Button>\n      </Drawer>\n\n\n    {/* close dialog */}\n      <Dialog\n        open={openCancel}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleCloseCancel}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"Exit design?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            Are you sure you would like to exit your design? Confirm that it is saved before you go.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseCancel} color=\"primary\">\n            No, don't exit\n          </Button>\n          <Button onClick={() => {\n              handleCloseCancel()\n              setTimeout(() => history.push(\"/dashboard\"), 500)            \n          }} color=\"secondary\">\n            Exit\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* add dialog */}\n\n      <Dialog open={openAdd} onClose={handleCloseAdd} aria-labelledby=\"form-dialog-title\" TransitionComponent={Transition}>\n        <DialogTitle id=\"form-dialog-title\">Add an Object</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To create an element, first choose what <strong>type</strong> of object you want(text or image), then specify the respective value (image address or text).\n          </DialogContentText>\n\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Type</FormLabel>\n            <RadioGroup aria-label=\"gender\" name=\"type\" value={type} onChange={handleTypeChange}>\n                <FormControlLabel value=\"image\" control={<Radio />} label=\"Image\" />\n                <FormControlLabel value=\"text\" control={<Radio />} label=\"Text\" />\n            </RadioGroup>\n        </FormControl>\n\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Value\"\n            fullWidth\n            value={value}\n            onChange={handleValueChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseAdd} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={() => {\n              addObject();\n              setValue(\"\");\n              setType(\"\");\n              handleCloseAdd();\n          }} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Edit dialog */}\n\n      <Dialog open={openEdit} onClose={handleCloseEdit} aria-labelledby=\"form-dialog-title\" TransitionComponent={Transition}>\n        <DialogTitle id=\"form-dialog-title\">Edit: <strong>{card.objects[selectedIndex].value}</strong></DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Choose to either change the <strong>value</strong> of the object or <strong>delete</strong> it. \n          </DialogContentText>\n\n\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Update Value\"\n            fullWidth\n            value={renameValue}\n            onChange={handleRename}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseEdit} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={() => {\n            if(card.objects.length > 1) {\n              let oldIndex = selectedIndex;\n\n              setSelectedIndex(oldIndex > 0 ? oldIndex - 1 : oldIndex + 1);\n\n              card.objects.splice(oldIndex, 1);\n              handleCloseEdit();\n            } else {\n              openSnackbar(\"Could not delete - need at least one object.\")\n            }\n          }} color=\"secondary\">\n            Delete\n          </Button>\n          <Button onClick={() => {\n              renameObject();\n              // setValue(\"\");\n              // setType(\"\");\n              handleCloseEdit();\n          }} color=\"primary\">\n            Update Value\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Save Dialog */}\n      <Dialog open={openSave} onClose={handleCloseSave} aria-labelledby=\"form-dialog-title\" TransitionComponent={Transition}>\n        <DialogTitle id=\"form-dialog-title\">Save project?</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Are you sure you would like to save? <strong>This will overwrite your previous version.</strong>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseSave} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button onClick={savePressed} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* View Dialog */}\n      <Dialog open={openView} onClose={handleCloseView} aria-labelledby=\"form-dialog-title\" TransitionComponent={Transition}>\n        <DialogTitle id=\"form-dialog-title\">Print: \"<strong>{card.displayName}</strong>\"</DialogTitle>\n        <DialogContent>\n          <Share id={card.id} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseView} color=\"primary\">\n            Close\n          </Button>\n          {/* <Button onClick={handlePrint} color=\"primary\">\n            Print\n          </Button> */}\n        </DialogActions>\n      </Dialog>\n\n      {/* Snackbars */}\n      <Snackbar\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n        open={snackbar}\n        onClose={() => setSnackbar(false)}\n        message={snackbarText}\n      />\n    </div>\n        // <div>\n        //     {/* options */}\n        //     <Drawer>\n\n        //     </Drawer>\n\n        //     {/* editor */}\n        //     <div style={{height: window.innerHeight, zIndex: 5}}>\n        //         <Canvas onCreated={state => state.gl.setClearColor(\"#ebe8e8\")}>\n        //             <Scene objects={objects} />\n        //         </Canvas>\n        //     </div>\n        // </div>\n    )\n}\n\nexport default Editor;\n\nfunction useReactToPrint(arg0: { content: () => any; }) {\n  throw new Error('Function not implemented.');\n}\n","import React, { Suspense, useEffect, useState } from 'react';\nimport { Link, Redirect, useHistory, useParams } from 'react-router-dom';\n\nimport CardSchema from \"../schema/card\";\nimport Editor from \"../components/Editor\";\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport { CircularProgress } from '@material-ui/core';\n\nfunction App() {\n    const { id } = useParams<{id: string}>();\n    \n    const [user, setUser] = useState(firebase.auth().currentUser);\n    const history = useHistory();\n\n    const db = firebase.firestore();\n\n    let fetched = false;\n\n    const [card, setCard] = useState<CardSchema>({\n      createdAt: undefined,\n      displayName: \"NULL_CARD\",\n      owner: \"NULL_OWNER\",\n      objects: [],\n      id: \"NULL_ID\"\n    });\n\n    async function saveCard(card: CardSchema) {\n      await db.collection(\"cards\").doc(id).set(\n        card,\n        {merge: true}\n      );\n    }\n\n    async function fetchData(user: firebase.User) {\n      console.trace(\"hi\")\n      const data = await db.collection(\"cards\")\n        .where(\"owner\", \"==\", user!.uid)\n        .where(firebase.firestore.FieldPath.documentId(), '==', id)\n        .get();\n      let count = 0;\n      let card_tmp: CardSchema | undefined;\n      data.forEach(obj => {\n        if (count > 0)\n          return;\n\n        card_tmp = obj.data() as CardSchema;\n        // card_tmp.id = id;\n        \n        count++;\n      });\n      if (card_tmp)\n        setCard(card_tmp);\n    }\n\n    async function getData() {\n      if(fetched)\n        return\n      console.log(`de ${user}`)\n      if(user) {\n        fetched = true;\n        fetchData(user);\n      } else {\n        return {};\n      }\n    }\n\n    \n\n    useEffect(() => {\n      alert('hi')\n      firebase.auth().onAuthStateChanged(user => {\n        console.log(\"au\")\n        if(user) {\n          setUser(user)\n          fetchData(user)\n          // if(!fetched)\n            // getData()\n        }\n        else\n          alert(JSON.stringify(firebase.auth()))\n      });\n      // getData()\n      console.log(card);\n    }, [])\n\n    // if(user) {\n      return (\n        <div>\n          {\n            card.id != \"NULL_ID\" ?\n\n              <div>\n                <Editor passedCard={card} saveCard={saveCard} />\n              </div>\n              :\n\n              <div style={{textAlign: \"center\"}}>\n                <h1>Loading Editor...</h1>\n                <CircularProgress />\n                <p>\n                  If the editor does not load for some time, you might not own this card or you might not be signed in.\n                </p>\n\n                <Link to=\"/\">Return to Home</Link>\n              </div>\n          }\n          \n        </div>\n      );\n    // } else {\n    //   return (\n    //     <Redirect to=\"/\" />\n    //   )\n    // }\n}\n\nexport default App;","export default __webpack_public_path__ + \"static/media/card_logo.2d9b1dce.zpt\";","import * as THREE from 'three';\nimport {MeshProps, useLoader, useThree } from 'react-three-fiber'\nimport { useEffect, useMemo, useRef, useState } from 'react';\n\nimport Font from \"../assets/font.json\";\nimport { TransformControls } from '@react-three/drei';\nimport { Mesh } from 'three';\n\ninterface TextProps extends MeshProps {\n    text: string; \n    color?: string;\n}\n\nconst Text: React.FC<TextProps> = (textProps) => {\n    const font = new THREE.FontLoader().parse(Font);\n\n    const meshRef = useRef<Mesh>();\n    \n    const { text, color, ...meshProps} = textProps;\n    \n    const textOptions = {\n      font,\n      size: 0.5,\n      height: 0.01,\n    };\n  \n    return (\n      <mesh\n        {...meshProps}\n        ref={meshRef}\n        >\n        <textGeometry attach='geometry' args={[text, textOptions]} />\n        <meshStandardMaterial color={color ?? \"black\"} />\n      </mesh>\n    )\n  }\n  \n  export default Text;","import React, { Suspense } from 'react';\nimport { ZapparCamera, ImageTracker, ZapparCanvas } from '@zappar/zappar-react-three-fiber';\nimport targetFile from '../assets/card_logo.zpt'\nimport sanjith from \"../assets/sanjithar.png\"\nimport { MeshProps, useLoader } from 'react-three-fiber'\n\nimport Image from \"./Image\"\nimport Text from \"./Text\"\n\nimport * as THREE from 'three';\nimport Font from \"../assets/font.json\";\n\nimport \"../index.css\"\nimport ARObject from '../schema/arobject';\n\nconst ARCanvas:React.FC<{objects: ARObject[]}> = ({objects}) => {\n    return (\n      <ZapparCanvas>\n        <ZapparCamera rearCameraMirrorMode=\"none\" />\n        <ImageTracker\n          onNotVisible={(anchor) => console.log(`Not visible ${anchor.id}`)}\n          onNewAnchor={(anchor) => console.log(`New anchor ${anchor.id}`)}\n          onVisible={(anchor) => console.log(`Visible ${anchor.id}`)}\n          targetImage={targetFile}\n        >\n\n          <Suspense fallback={null}>\n              \n          {objects.map((object, i) => {\n              // <Text text=\"hi\" position={[0, 0, 0]} rotation={[0, 0, 0]} />\n              // const orbit = useRef()\n              // const transform = useRef()\n\n              {\n                let obj;\n                if(object.type == \"text\")\n                    obj = <Text key={i} text={object.value} color=\"black\" rotation={[object.rotation.x * Math.PI/180, object.rotation.z * Math.PI/180, object.rotation.y * Math.PI/180]} position={[object.position.x, object.position.z, object.position.y-5]}></Text>\n                else\n                    obj = <Image key={i} rotation={[object.rotation.x * Math.PI/180, object.rotation.z * Math.PI/180, object.rotation.y * Math.PI/180]} src={object.value} position={[object.position.x, object.position.z, object.position.y-5]}></Image>\n                \n                return (\n                  <>\n                    {obj}\n                  </>\n                )\n              }\n            })}\n\n\n          </Suspense>\n\n\n        </ImageTracker>\n        <directionalLight position={[2.5, 8, 5]} intensity={1.5} />\n      </ZapparCanvas>\n    );\n}\n\nexport default ARCanvas;\n","import React, { Suspense, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport CardSchema from \"../schema/card\";\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nimport { CircularProgress } from '@material-ui/core';\nimport ARCanvas from '../components/ARCanvas';\n\nfunction View() {\n    const { id } = useParams<{id: string}>();\n\n    const db = firebase.firestore();\n\n    const [card, setCard] = useState<CardSchema>({\n        createdAt: undefined,\n        displayName: \"NULL_CARD\",\n        owner: \"NULL_OWNER\",\n        objects: [],\n        id: \"NULL_ID\"\n    });\n\n    async function fetchData() {\n        console.trace(\"hi\")\n        const data = await db.collection(\"cards\")\n          .where(firebase.firestore.FieldPath.documentId(), '==', id)\n          .get();\n\n        let count = 0;\n        let card_tmp: CardSchema | undefined;\n\n        data.forEach(obj => {\n          if (count > 0)\n            return;\n  \n          card_tmp = obj.data() as CardSchema;\n          // card_tmp.id = id;\n          \n          count++;\n        });\n\n        if (card_tmp)\n          setCard(card_tmp);\n    }\n\n    useEffect(() => {\n        fetchData()\n        console.log(card)\n    }, [])\n\n    return ( \n    <div style={{height: window.innerHeight}}>\n         {\n            card.id == \"NULL_ID\" ?\n            // <div style={{height: window.innerHeight, position: \"relative\"}}>\n                <div style={{textAlign: \"center\"}}>\n                    <h1>Loading</h1>\n                    <CircularProgress />\n                {/* </div>  */}\n            </div> :\n\n            <ARCanvas objects={card.objects}></ARCanvas>\n        }\n      </div>\n    );\n}\n\nexport default View;","import React from \"react\";\nimport \"./index.css\";\nimport {HashRouter, Route, Redirect, BrowserRouter} from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Edit from \"./pages/Edit\";\nimport View from \"./pages/View\";\n\nfunction App() {\n    return (\n        <div style={{fontFamily: \"Nunito\"}}>\n            <BrowserRouter>\n                <Route path=\"/\" exact component={Home}/>\n                <Route path=\"/about\" component={About}/>\n                <Route path=\"/dashboard\" component={Dashboard}/>\n\n                <Route path=\"/edit\" exact>\n                    <Redirect to=\"/\"></Redirect>\n                </Route>\n\n                <Route path=\"/view\" exact>\n                    <Redirect to=\"/\"></Redirect>\n                </Route>\n\n                <Route path=\"/edit/:id\" component={Edit}/>\n                <Route path=\"/view/:id\" component={View}/>\n            </BrowserRouter>\n        </div>\n    )\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}